import React, { useState, useEffect } from 'react';
import { Button, Table, Toast, Container, Modal, Form } from 'react-bootstrap';
import axios from 'axios';

const Dashboard = () => {
  const [users, setUsers] = useState([]);
  const [showToast, setShowToast] = useState(false);
  const [showModal, setShowModal] = useState(false);
  const [selectedUser, setSelectedUser] = useState(null);
  const [action, setAction] = useState("");

  useEffect(() => {
    // Fetch user data
    axios.get('https://jsonplaceholder.typicode.com/users')
      .then(response => setUsers(response.data))
      .catch(error => console.error('Error fetching users:', error));
  }, []);

  const handleEdit = (user) => {
    setSelectedUser(user);
    setAction('edit');
    setShowModal(true);
  };

  const handleDelete = (user) => {
    setSelectedUser(user);
    setAction('delete');
    setShowToast(true);
  };

  const confirmDelete = () => {
    setUsers(users.filter(user => user.id !== selectedUser.id));
    setShowToast(false);
  };

  const handleEditChange = (e) => {
    setSelectedUser({ ...selectedUser, [e.target.name]: e.target.value });
  };

  const saveChanges = () => {
    setUsers(users.map(user => (user.id === selectedUser.id ? selectedUser : user)));
    setShowModal(false);
  };

  return (
    <Container>
      <h1 className="text-center my-4">User Dashboard</h1>
      <Table striped bordered hover>
        <thead>
          <tr>
            <th>Name</th>
            <th>Username</th>
            <th>Email</th>
            <th>Phone</th>
            <th>Website</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody>
          {users.map(user => (
            <tr key={user.id}>
              <td>{user.name}</td>
              <td>{user.username}</td>
              <td>{user.email}</td>
              <td>{user.phone}</td>
              <td>{user.website}</td>
              <td>
                <Button variant="warning" onClick={() => handleEdit(user)}>Edit</Button>{' '}
                <Button variant="danger" onClick={() => handleDelete(user)}>Delete</Button>
              </td>
            </tr>
          ))}
        </tbody>
      </Table>

      {/* Toast for delete confirmation */}
      <Toast show={showToast} onClose={() => setShowToast(false)} className="position-fixed bottom-0 end-0 p-3">
        <Toast.Header>
          <strong className="me-auto">Confirm Action</strong>
        </Toast.Header>
        <Toast.Body>
          Are you sure you want to delete {selectedUser?.name}?
          <div className="mt-2">
            <Button variant="secondary" onClick={() => setShowToast(false)}>No</Button>{' '}
            <Button variant="primary" onClick={confirmDelete}>Yes</Button>
          </div>
        </Toast.Body>
      </Toast>

      {/* Modal for editing user */}
      <Modal show={showModal} onHide={() => setShowModal(false)}>
        <Modal.Header closeButton>
          <Modal.Title>Edit User</Modal.Title>
        </Modal.Header>
        <Modal.Body>
          <Form>
            <Form.Group className="mb-3">
              <Form.Label>Name</Form.Label>
              <Form.Control
                type="text"
                name="name"
                value={selectedUser?.name || ""}
                onChange={handleEditChange}
              />
            </Form.Group>
            <Form.Group className="mb-3">
              <Form.Label>Username</Form.Label>
              <Form.Control
                type="text"
                name="username"
                value={selectedUser?.username || ""}
                onChange={handleEditChange}
              />
            </Form.Group>
            <Form.Group className="mb-3">
              <Form.Label>Email</Form.Label>
              <Form.Control
                type="email"
                name="email"
                value={selectedUser?.email || ""}
                onChange={handleEditChange}
              />
            </Form.Group>
            <Form.Group className="mb-3">
              <Form.Label>Phone</Form.Label>
              <Form.Control
                type="text"
                name="phone"
                value={selectedUser?.phone || ""}
                onChange={handleEditChange}
              />
            </Form.Group>
            <Form.Group className="mb-3">
              <Form.Label>Website</Form.Label>
              <Form.Control
                type="text"
                name="website"
                value={selectedUser?.website || ""}
                onChange={handleEditChange}
              />
            </Form.Group>
          </Form>
        </Modal.Body>
        <Modal.Footer>
          <Button variant="secondary" onClick={() => setShowModal(false)}>
            Close
          </Button>
          <Button variant="primary" onClick={saveChanges}>
            Save Changes
          </Button>
        </Modal.Footer>
      </Modal>
    </Container>
  );
};

export default Dashboard;
